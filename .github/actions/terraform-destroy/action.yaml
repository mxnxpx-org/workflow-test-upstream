name: Terraform Destroy
description: Runs an destroy on the terraform.

inputs:
  environment:
    description: Name of the environment to apply
    required: true
  target:
    description: Target directory under terraform
    required: true

runs:
  using: composite
  steps:
    - name: Configure AWS Credentials
      shell: bash
      run: |
       echo "[*] Configure AWS Credentials"
#      uses: aws-actions/configure-aws-credentials@5579c002bb4778aa43395ef1df492868a9a1c83f # v4.0.2
#      with:
#        role-to-assume: ${{ env.AWS_GOVCLOUD_ROLE_TO_ASSUME }}
#        role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha  }}
#        aws-region: ${{ env.AWS_REGION }}
#        role-duration-seconds: 3600

    - uses: opentofu/setup-opentofu@ae80d4ecaab946d8f5ff18397fbf6d0686c6d46a # v1.0.3
      with:
        tofu_version: 1.6.2

    - name: Run Terraform Destroy
      shell: bash
#      working-directory: './terraform/${{ inputs.target }}/'
      env:
        TF_VAR_environment: ${{ inputs.environment }}
#        TF_VAR_region: ${{ env.AWS_REGION }}
#        TF_VAR_permissions_boundary: ${{ env.PERMISSIONS_BOUNDARY }}
      run: |
         echo "[*] Run Terraform Destroy"
         echo "inputs.environment: ${{ inputs.environment}}"
         echo "inputs.target: ${{ inputs.target}}"
#        tofu init \
#          -backend-config="region=${AWS_REGION}" \
#          -backend-config="bucket=${STATE_BUCKET}" \
#          -backend-config="key=${{ inputs.environment }}/${{ inputs.target }}.tfstate" \
#          -backend-config="dynamodb_table=${LOCK_TABLE}" \
#          -var-file="../../env/${{ inputs.environment }}/${{ inputs.target }}.tfvars"
#        tofu destroy -var-file="../../env/${{ inputs.environment }}/${{ inputs.target }}.tfvars" -auto-approve
