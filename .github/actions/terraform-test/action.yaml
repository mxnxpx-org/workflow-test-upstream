name: Terraform Test
description: Runs a test on the terraform.

inputs:
  environment:
    description: Name of the environment to test
    required: true
  target:
    description: Target directory under terraform
    required: true
  repository:
    description: Code Repository
    required: true
  region:
    description: AWS region
    required: true
  permissions_boundary:
    description: IAM permissions boundary
    required: true
  state_bucket:
    description: S3 bucket to store terraform state
    required: true
  lock_table:
    description: DynamoDB table to lock terraform state
    required: true
  read_only_role_to_assume:
    description: IAM role to assume for read-only access
    required: true

runs:
  using: composite
  steps:
    - name: Terraform Formatting
      uses: ./.github/actions/terraform-formatting
      with:
        target: ${{ inputs.target }}

    - name: Terraform Scanning
      uses: ./.github/actions/terraform-scanning
      with:
        target: ${{ inputs.target }}

    - name: Configure AWS Credentials
      shell: bash
      run: |
       echo "[*] Configure AWS Credentials"
       echo "inputs.region: ${{ inputs.region }}"
       echo "inputs.role-to-assume: ${{ inputs.role-to-assume }}"
#      uses: aws-actions/configure-aws-credentials@5579c002bb4778aa43395ef1df492868a9a1c83f # v4.0.2
#      with:
#        role-to-assume: ${{ inputs.read_only_role_to_assume }}
#        role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha  }}
#        aws-region: ${{ inputs.region }}
#        role-duration-seconds: 3600

    - uses: opentofu/setup-opentofu@ae80d4ecaab946d8f5ff18397fbf6d0686c6d46a # v1.0.3
      with:
        tofu_wrapper: false
        tofu_version: 1.6.2

    - name: Run Terraform Plan
      shell: bash
#      working-directory: './terraform/${{ inputs.target }}/'
      env:
        TF_VAR_environment: ${{ inputs.environment }}
        TF_VAR_repository: ${{ inputs.repository }}
        TF_VAR_region: ${{ inputs.region }}
        TF_VAR_permissions_boundary: ${{ inputs.permissions_boundary }}
      run: |
        echo "[*] Run Terraform Plan"
        echo "inputs.environment: ${{ inputs.environment }}"
        echo "inputs.repository: ${{ inputs.repository }}"
        echo "inputs.region: ${{ inputs.region }}"
        echo "inputs.permission_boundary: ${{ inputs.permissions_boundary }}"
#          tfargs=()
#          # Use the environment + module specific var file if it exists
#          if [[ -f "../../env/${{ inputs.environment }}/${{ inputs.target }}.tfvars" ]]; then
#            tfargs+=(-var-file="../../env/${{ inputs.environment }}/${{ inputs.target }}.tfvars")
#          fi
#          tofu init \
#            -backend-config="region=${{ inputs.region }}" \
#            -backend-config="bucket=${{ inputs.state_bucket }}" \
#            -backend-config="key=${{ inputs.environment }}/${{ inputs.target }}.tfstate" \
#            -backend-config="dynamodb_table=${{ inputs.lock_table }}" ${tfargs[*]}
#          tofu plan ${tfargs[*]} -out terraform.plan
#          tofu show -no-color terraform.plan > terraform.text
#          tofu show -json terraform.plan > terraform.json

    - name: Generate Terraform Diff Report
      shell: bash
      run: |
        echo "[*] Generate Terraform Diff Report"
        echo "inputs.target: ${{ inputs.target }}"
#      uses: ahmadnassri/action-terraform-report@dbb2e90280012baaef228bab65e9ce68b33f0e4b # v4.1.1
#      with:
#        terraform-text: terraform/${{ inputs.target }}/terraform.text
#        terraform-json: terraform/${{ inputs.target }}/terraform.json
#        remove-stale-reports: true
#        custom-header: ":robot: Terraform Plan for ${{ inputs.environment }} ${{ inputs.target }}"
